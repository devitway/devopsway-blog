#!/bin/bash

# =============================================================================
# –°–ö–†–ò–ü–¢ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –ó–ê–ì–û–õ–û–í–ö–û–í DEVOPS WAY –° –í–û–ó–ú–û–ñ–ù–û–°–¢–¨–Æ –û–¢–ö–ê–¢–ê
# =============================================================================

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BACKUP_DIR="${SCRIPT_DIR}/backups/headers_$(date +%Y%m%d_%H%M%S)"
CSS_FILE="assets/css/extended/custom.css"
HUGO_CONFIG="hugo.toml"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_environment() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [[ ! -f "$HUGO_CONFIG" ]]; then
        error "hugo.toml –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è Hugo –ø—Ä–æ–µ–∫—Ç–∞."
        exit 1
    fi
    
    if [[ ! -f "$CSS_FILE" ]]; then
        error "–§–∞–π–ª $CSS_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Hugo
    if ! command -v hugo &> /dev/null; then
        error "Hugo –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Git
    if ! command -v git &> /dev/null; then
        warning "Git –Ω–µ –Ω–∞–π–¥–µ–Ω. –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–º."
    fi
    
    success "–û–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
create_backup() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
    
    mkdir -p "$BACKUP_DIR"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
    cp "$CSS_FILE" "$BACKUP_DIR/"
    cp "$HUGO_CONFIG" "$BACKUP_DIR/"
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ CSS —Ñ–∞–π–ª—ã
    if [[ -f "assets/css/extended/dark-theme-enhanced.css" ]]; then
        cp "assets/css/extended/dark-theme-enhanced.css" "$BACKUP_DIR/"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç –±—ç–∫–∞–ø–∞
    cat > "$BACKUP_DIR/backup_manifest.txt" << EOF
Backup created: $(date)
Hugo version: $(hugo version 2>/dev/null || echo "unknown")
Git commit: $(git rev-parse HEAD 2>/dev/null || echo "unknown")
Changed files:
- $CSS_FILE
- $HUGO_CONFIG
EOF
    
    # Git commit —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
    if command -v git &> /dev/null && git rev-parse --git-dir > /dev/null 2>&1; then
        git add .
        git commit -m "Backup before header optimization - $(date)" || true
    fi
    
    success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_DIR"
}

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π
apply_optimizations() {
    log "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤..."
    
    # 1. –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –≤ –∫–æ–Ω–µ—Ü custom.css
    cat >> "$CSS_FILE" << 'EOF'

/* =============================================================================
   –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ó–ê–ì–û–õ–û–í–ö–ò - –î–û–ë–ê–í–õ–ï–ù–û –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò
   ============================================================================= */

/* –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ */
:root {
  --h1-desktop: 2.25rem; --h2-desktop: 2rem; --h3-desktop: 1.5rem;
  --h1-tablet: 2rem; --h2-tablet: 1.75rem; --h3-tablet: 1.375rem;
  --h1-mobile: 1.5rem; --h2-mobile: 1.375rem; --h3-mobile: 1.25rem;
  --h1-small: 1.25rem; --h2-small: 1.125rem; --h3-small: 1rem;
}

/* –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ */
.post-title, .assessment-intro h2, h1 {
  font-size: var(--h1-desktop);
  line-height: 1.2;
  letter-spacing: -0.02em;
  max-width: 32ch;
  text-wrap: balance;
}

.section-header, .level-header, h2 {
  font-size: var(--h2-desktop);
  line-height: 1.3;
  letter-spacing: -0.01em;
}

.skills-group h4, h3 {
  font-size: var(--h3-desktop);
  line-height: 1.4;
}

/* Tablet */
@media screen and (max-width: 1199px) and (min-width: 768px) {
  .post-title, .assessment-intro h2, h1 { font-size: var(--h1-tablet); }
  .section-header, .level-header, h2 { font-size: var(--h2-tablet); }
  .skills-group h4, h3 { font-size: var(--h3-tablet); }
}

/* Mobile */
@media screen and (max-width: 767px) and (min-width: 481px) {
  .post-title, .assessment-intro h2, h1 { 
    font-size: var(--h1-mobile); 
    line-height: 1.25; 
    margin-bottom: 0.75rem; 
  }
  .section-header, .level-header, h2 { font-size: var(--h2-mobile); }
  .skills-group h4, h3 { font-size: var(--h3-mobile); }
}

/* Small Mobile */
@media screen and (max-width: 480px) {
  .post-title, .assessment-intro h2, h1 { 
    font-size: var(--h1-small); 
    line-height: 1.2; 
    word-break: break-word; 
    hyphens: auto; 
  }
  .section-header, .level-header, h2 { 
    font-size: var(--h2-small); 
    padding: 0.75rem 1rem; 
  }
  .skills-group h4, h3 { font-size: var(--h3-small); }
}

/* –£–ª—É—á—à–µ–Ω–∏—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ */
.post-title, .assessment-intro h2, h1, h2, h3, h4 {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

/* –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã */
.mobile-title { display: none; }
@media screen and (max-width: 767px) {
  .desktop-title { display: none; }
  .mobile-title { display: block; }
}

EOF
    
    success "–°—Ç–∏–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏
test_build() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏ Hugo..."
    
    # –ü—Ä–æ–±—É–µ–º —Å–æ–±—Ä–∞—Ç—å —Å–∞–π—Ç
    if hugo --buildDrafts --buildFuture --gc --cleanDestinationDir --quiet; then
        success "–°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã CSS
        if [[ -f "public/css/extended/custom.css" ]]; then
            local css_size=$(stat -f%z "public/css/extended/custom.css" 2>/dev/null || stat -c%s "public/css/extended/custom.css" 2>/dev/null || echo "unknown")
            log "–†–∞–∑–º–µ—Ä CSS —Ñ–∞–π–ª–∞: $css_size –±–∞–π—Ç"
        fi
        
        return 0
    else
        error "–°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
check_performance() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤
    local css_size=$(stat -f%z "$CSS_FILE" 2>/dev/null || stat -c%s "$CSS_FILE" 2>/dev/null || echo "0")
    log "–†–∞–∑–º–µ—Ä CSS —Ñ–∞–π–ª–∞: $css_size –±–∞–π—Ç"
    
    if [[ $css_size -gt 100000 ]]; then
        warning "CSS —Ñ–∞–π–ª —Å—Ç–∞–ª –±–æ–ª—å—à–µ 100KB. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é."
    fi
    
    # –ú–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ production
    if [[ "${HUGO_ENVIRONMENT:-}" == "production" ]]; then
        log "Production —Ä–µ–∂–∏–º: –ø—Ä–∏–º–µ–Ω—è–µ–º –º–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—é"
        hugo --minify --gc --cleanDestinationDir
    fi
}

# –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
rollback() {
    local backup_dir="$1"
    
    if [[ ! -d "$backup_dir" ]]; then
        error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $backup_dir"
        return 1
    fi
    
    warning "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã
    if [[ -f "$backup_dir/$(basename "$CSS_FILE")" ]]; then
        cp "$backup_dir/$(basename "$CSS_FILE")" "$CSS_FILE"
        success "CSS —Ñ–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [[ -f "$backup_dir/$(basename "$HUGO_CONFIG")" ]]; then
        cp "$backup_dir/$(basename "$HUGO_CONFIG")" "$HUGO_CONFIG"
        success "Hugo –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    fi
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞
    if test_build; then
        success "–û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        error "–ü—Ä–æ–±–ª–µ–º—ã –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é."
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ DevOps Way"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    case "${1:-apply}" in
        "rollback")
            if [[ -z "${2:-}" ]]; then
                error "–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—ç–∫–∞–ø–∞: $0 rollback /path/to/backup"
                exit 1
            fi
            rollback "$2"
            exit $?
            ;;
        "apply")
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
            echo "  $0 apply          - –ü—Ä–∏–º–µ–Ω–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"
            echo "  $0 rollback DIR   - –û—Ç–∫–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ –±—ç–∫–∞–ø–∞"
            exit 1
            ;;
    esac
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_environment
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    create_backup
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if apply_optimizations; then
        log "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π"
        rollback "$BACKUP_DIR"
        exit 1
    fi
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    if test_build; then
        log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ"
    else
        warning "–û—à–∏–±–∫–∏ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ. –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–∫–∞—Ç..."
        rollback "$BACKUP_DIR"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    check_performance
    
    success "üéâ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo
    echo "üìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $BACKUP_DIR"
    echo "üîÑ –î–ª—è –æ—Ç–∫–∞—Ç–∞: $0 rollback $BACKUP_DIR"
    echo "üìä –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É:"
    echo "   - –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –¥–ª–∏–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ 50-60 —Å–∏–º–≤–æ–ª–æ–≤"
    echo "   - –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö"
    echo "   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞—Å—Å—ã .mobile-title/.desktop-title –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≤–µ—Ä—Å–∏–π"
    echo
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
    echo "   hugo server --buildDrafts"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö: 320px, 768px, 1200px+"
}

# –ó–∞–ø—É—Å–∫
main "$@"
